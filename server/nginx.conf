events {
    worker_connections 1024;
}

http {
    proxy_cache_path /tmp/cache levels=1:2 keys_zone=cache:10m;

    # Upstream simulando um storage externo
    upstream storage {
        server 127.0.0.1:8081;
    }

    server {
        listen 8080;
        add_header X-Cache-Status $upstream_cache_status;
        proxy_cache cache;
        proxy_cache_lock on;
        proxy_cache_valid 200 30s;

        location ~ /items/(?<image>.+)$ {
            proxy_pass http://storage/$image;
            # Forma a cache key com os parâmetros da query string. Isso pode
            # degradar seu cache porque cada mínima mudança nos parâmetros
            # vai criar uma nova entrada no cache
            proxy_cache_key $image$is_args$args;
        }

        location ~ /products/(?<image>.+)\.(?<ext>.+)$ {
            proxy_pass http://storage/$image.$ext;
            # Provavelmente ninguém usaria a extensão como chave de cache. Isso é
            # apenas um exemplo didático de como uma chave errada pode introduzir
            # um problema sério
            proxy_cache_key $ext;
        }

        location ~ \.jpg$ {
            proxy_pass http://storage;
            # Cache key padrão. Uma estratégia de cache comum que resolve
            # uma grande variedade de problemas
            proxy_cache_key $scheme$proxy_host$request_uri;
        }
    }

    server {
        listen 8081;

        location ~ \.jpg {
            root /www/data;
        }
    }
}
